#!/usr/bin/python

# Author: Diana Delibaltov
# Vision Research Lab, University of California Santa Barbara

# Imports
import sys
import os
from PySide import QtGui, QtCore

# Imports from this project
import CellECT

"""
Menu application adapted from:
http://zetcode.com/gui/pysidetutorial/firstprograms/
"""


class MainMenu(QtGui.QWidget):

    """
    Main menu for CellECT displaying workspace creation, seg tool, track tool, visit page and quit.
    """
    
    def __init__(self):
        super(MainMenu, self).__init__()
        
        self.initUI()
        
    def initUI(self):
        
        QtGui.QToolTip.setFont(QtGui.QFont('SansSerif', 10))
        
        self.setToolTip('This is a <b>QWidget</b> widget')
        
        pixmap = QtGui.QPixmap(CellECT.__path__[0] + "/resources/CellECT_logo.png")

        self.logo = QtGui.QLabel(self)
        self.logo.setPixmap(pixmap)


        buttons_offset = 150
        buttons_height = 28
        buttons_width = 360
        buttons_spacing = 3


        # List of buttons:

        self.btn_create_ws = QtGui.QPushButton('Create a new workspace', self)
        self.btn_create_ws.setToolTip('Make a new workspace <b>CellECT</b> for a new dataset.')
        self.btn_create_ws.resize(buttons_width, buttons_height)
        self.btn_create_ws.move(50, buttons_offset)      
        self.btn_create_ws.clicked.connect(self.run_CellECT_create_workspace)


        self.btn_seg_tool = QtGui.QPushButton('CellECT Segmentation Tool', self)
        self.btn_seg_tool.setToolTip('Run the interactive <b>CellECT</b> segmentation tool.')
        self.btn_seg_tool.resize(buttons_width, buttons_height)
        self.btn_seg_tool.move(50, buttons_offset + (buttons_height + buttons_spacing)) 
        self.btn_seg_tool.clicked.connect(self.run_CellECT_seg_tool)


        self.btn_track_tool = QtGui.QPushButton('CellECT Tracking Tool', self)
        self.btn_track_tool.setToolTip('Run <b>CellECT</b> tracking tool to make cell associations.')
        self.btn_track_tool.resize(buttons_width, buttons_height)
        self.btn_track_tool.move(50, buttons_offset + (buttons_height + buttons_spacing)*2) 
        self.btn_track_tool.clicked.connect(self.run_CellECT_track_tool)


        self.btn_readme = QtGui.QPushButton('Visit Project Page', self)
        self.btn_readme.setToolTip('Visit the <b>CellECT</b> website on GitHub.')
        self.btn_readme.resize(buttons_width, buttons_height)
        self.btn_readme.move(50, buttons_offset + (buttons_height + buttons_spacing)*3) 
        self.btn_readme.clicked.connect(self.run_CellECT_readme)

        self.btn_quit = QtGui.QPushButton('Quit', self)
        self.btn_quit.setToolTip('Quit <b>CellECT<b>.')
        self.btn_quit.resize(buttons_width, buttons_height)
        self.btn_quit.move(50, buttons_offset + (buttons_height + buttons_spacing)*4) 
        self.btn_quit.clicked.connect(QtCore.QCoreApplication.instance().quit)
        
        self.setGeometry(300, 300, 470, 330)
        self.setWindowTitle('CellECT')    
        self.show()
        

    def run_CellECT_readme(self):

        """
        Open firefox at the GitHub project page.
        """

        os.system('firefox https://github.com/ddiana/CellECT')


    def run_CellECT_seg_tool(self):

        """
        Open gnome-terminal and run CellECT_seg_tool and sleep 1 sec
        """

        os.system('gnome-terminal -x sh -c "CellECT_seg_tool; sleep 1"')


    def run_CellECT_track_tool(self):

        """
        Open gnome-terminal and run CellECT_track_tool and sleep 1 sec
        """

        os.system('gnome-terminal -x sh -c "CellECT_track_tool; sleep 1"')


    def run_CellECT_create_workspace(self):

        """
        Open gnome-terminal and run CellECT_create_workspace_directories and sleep 1 sec
        """
        os.system('gnome-terminal -x sh -c "CellECT_create_workspace_directories; sleep 1"')



def main():
    
    app = QtGui.QApplication(sys.argv)
    CellECT_main_menu = MainMenu()
    sys.exit(app.exec_())


if __name__ == '__main__':
    main()
